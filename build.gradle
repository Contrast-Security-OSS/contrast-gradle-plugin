group "com.contrastsecurity"
version project.properties['version']

apply plugin: "groovy"
apply plugin: "maven"
apply plugin: "maven-publish"

sourceCompatibility = 1.5

buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.10"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.2'
        classpath 'net.researchgate:gradle-release:2.6.0' // https://github.com/researchgate/gradle-release
    }
}

apply plugin: "com.gradle.plugin-publish"
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'net.researchgate.release'

publishing {
  publications {
    contrastGradlePlugin(MavenPublication) {
      from components.java
      artifact shadowJar
    }
  }
}

repositories {
    mavenLocal() //for Contrast SDK
    mavenCentral()
}

dependencies {
    compile localGroovy()
    compile gradleApi()
    compile group: "com.contrastsecurity", name: "contrast-sdk-java", version:"2.7"

    testCompile gradleTestKit()
    testCompile group: "junit", name: "junit", version: "4.11"
    testCompile "com.google.guava:guava:23+"
    testCompile "org.apache.maven.plugins:maven-compiler-plugin:3.7.0"
}

uploadArchives {
    repositories {
        mavenDeployer {
            mavenLocal()
        }
    }
}


pluginBundle {
    website = "https://contrastsecurity.com"
    vcsUrl = "http://github.com/Contrast-Security-OSS/contrast-gradle-plugin"
    description = "Gradle plugin for Contrast Security, enables the installation of the Contrast Java Agent, connection to TeamServer, and verifying applications for new vulnerabilities."
    tags = ["Contrast", "Security"]

    plugins {
        contrastSecurityPlugin {
            id = "com.contrastsecurity.contrastplugin"
            displayName = "Contrast Security Gradle Plugin"
        }
    }
}


release {
    failOnCommitNeeded = true
    failOnUnversionedFiles = true
    failOnPublishNeeded = false
    buildTasks = ['build']
}

//If the release build succeeds, upload the artifact to Gradle Plugins
afterReleaseBuild.dependsOn publishPlugins